# logstash demo for adb log

input {
    file {
        path => "/home/totora/logstash/adb_*.log"
        start_position => "beginning"
        sincedb_path => "/dev/null"
    }
}


filter {
    grok {
        patterns_dir => ["."]
        patterns_files_glob => "log_pattern"
        match => {
            # "message" => "%{ADB_DATA:timestamp}%{SPACE}%{POSINT:ppid}%{SPACE}%{POSINT:pid}%{SPACE}%{ADB_LEVEL:level}%{SPACE}%{ADB_MSG:msg}"
            "message" => "%{ADB_DATA:timestamp}%{SPACE}%{POSINT:ppid}%{SPACE}%{POSINT:pid}%{SPACE}%{ADB_LEVEL:level}%{SPACE}%{ADB_SERVICE:service}%{SPACE}%{ADB_MSG:msg}"
        }
        # overwrite => ["message"]
        # remove_field => ["host"]
    }

    grok {
        match => {
            "path" => "%{GREEDYDATA}/%{GREEDYDATA:filename}\.log"
        }
    }

    date {
        match => ["timestamp", "MM-dd HH:mm:ss.SSS"]
        timezone => "Asia/Shanghai"
        # remove_field => ["timestamp"]
    }

#    if "java.lang.NullPointerException" in [msg] {
#        mutate {
#            add_tag => "Exception"
#        }
#    }

#     if [msg] =~ /^\s*at/ {
#         mutate {
#            add_tag => "Exception"
#         }
#     }

    if "java.lang.NullPointerException" in [msg] {
        ruby {
            init => "@@p_id = Array.new"
            code => "
                @@p_id.push event['pid']
                event['tags'] = Array.new
                event['tags'].push 'Exception'
                "
        }
    }

    ruby {
        code => "
            event['tags'] = Array.new
            event['tags'].push 'Exception' if @@p_id.include?(event['pid'])
            "
    }
}


output {
#    if "Exception" in [tags] {
#        file {
#            codec => line
#            flush_interval => 0
#            path => "/home/totora/logstash/Exception.log"
#        }
#        stdout {
#            codec => line
#        }
#    }

#   if "Exception" in [tags] {
#       file {
#         codec => json
#         flush_interval => 0
#         path => "/home/totora/logstash/%{filename}.json"
#     }
#  }

#  if "Exception" in [tags] {
#    stdout {
#        codec => json
#    }
#  }

    gelf {
        host => "172.16.117.196"
        port => 12203
        ship_metadata => false
    }
}
